# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:   
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this. 
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}   
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -no-boot-anim -no-window -accel on
          background: true
          parallel: true
      - run:
          name: Wait for emulator
          command: circle-android wait-for-boot
      - run:
          name: Sleep
          command: sleep 60
 #     - run:
 #         name: Remove lock screen
 #         command: adb shell input keyevent 82        
      - run:
          name: Run Tests
          command: ./gradlew lint connectedAndroidTest -PdisablePreDex
      - run:
          name: collect adb log
          command: adb logcat -d > chmod +x app/build/reports/androidTests/connected/logcat_emulator.txt
 #     - run:
 #         name: copy the build outputs to artifacts
 #         command: cp -r app/build/outputs $CIRCLE_ARTIFACTS
 #     - run:  
 #         name: copy the test results to the test results directory.
 #         command: cp -r app/build/outputs/androidTest-results/* $CIRCLE_TEST_REPOR
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/outputs/androidTest-results      

 

