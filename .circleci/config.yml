# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    steps:   
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this. 
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}   
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true    
      - run:
          name: Wait for emulator
          command: circle-android wait-for-boot
      - run:
          name: adb log
          command: adb logcat -d 
#      - run:
#          name: Remove lock screen
#          command: adb shell input keyevent 82        
      - run:
          name: Run Tests
          command: ./gradlew connectedAndroidTest
      - run:
          name: collect adb log
          command: adb logcat -d > chmod +x $CIRCLE_ARTIFACTS/logcat_emulator.txt
      - run:
          name: Save test results
          command: |
            mkdir -p ~/reports/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/reports/ \;
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports
          destination: reports

 

